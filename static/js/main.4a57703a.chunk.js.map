{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","name","email","CardList","console","log","monsters","map","id","SearchBox","handleChange","type","placeholder","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","data","this","filteredMonsters","filter","toLowerCase","includes","style","color","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAGaA,G,YAAK,SAACC,GACnB,OACA,sBAAKC,UAAU,iBAAf,UACC,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,KAAxC,4BACtB,6BAAKL,EAAMI,QAAQC,OAClBL,EAAMI,QAAQE,WCLHC,EAAS,SAACP,GAItB,OAFAQ,QAAQC,IAAIT,EAAMU,UAGjB,qBAAKT,UAAU,YAAf,SAIMD,EAAMU,SAASC,KAAK,SAAAP,GAAO,OAE1B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQQ,UCVfC,G,MAAY,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,aACvB,OACA,uBAAOb,UAAY,SACnBc,KAAO,SACPC,YAAc,iBACdC,SAAYH,MCqCDI,G,wDAvCX,aAAe,IAAD,8BACV,gBAYJJ,aAAe,SAACK,GACZ,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAZtC,EAAKC,MAAQ,CACTd,SAAU,GACVW,YAAa,IAJP,E,gEAOO,IAAD,OAChBI,MAAM,+CAA+CC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1EF,MAAK,SAAAG,GACF,EAAKT,SAAS,CAAEV,SAAUmB,S,+BAM5B,IAAD,EAC6BC,KAAKN,MAA/Bd,EADH,EACGA,SAAUW,EADb,EACaA,YACdU,EAAkB,GAYtB,OAXID,KAAKN,MAAMH,aACXb,QAAQC,IAAI,eAAgBY,GAC5Bb,QAAQC,IAAI,YAAaC,GACzBqB,EAAmBrB,EAASsB,QAAO,SAAA5B,GAC/B,OAAOA,EAAQC,KAAK4B,cAAcC,SAASb,EAAYY,kBAE3DzB,QAAQC,IAAI,oBAAqBsB,IAEjCA,EAAmBD,KAAKN,MAAMd,SAGzB,sBAAKT,UAAY,MAAjB,UACT,oBAAIkC,MAAO,CAACC,MAAM,wBAAlB,6BACI,cAAC,EAAD,CAAWtB,aAAiBgB,KAAKhB,eACjC,cAAC,EAAD,CAAUJ,SAAaqB,W,GAlCjBM,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4a57703a.chunk.js","sourcesContent":["import React from 'react'\nimport './card.style.css'\n\nexport const Card=(props)=>{\nreturn(\n<div className='card-container'>\n\t<img alt=\"monster\" src={`https://robohash.org/${props.monster.name}?set=set2&size=180x180`}/>\n\t<h2>{props.monster.name}</h2>\n\t{props.monster.email}\n</div>\n)\n\n\t}","import React from 'react'\nimport './card-list.styles.css'\nimport {Card} from '../card/card.component'\nexport const CardList=(props)=>{\n\t\n\tconsole.log(props.monsters)\n    \n\treturn (\n\t\t<div className='card-list'>\n\n        {\n       \n        props.monsters.map( monster=> (\n\n        \t<Card key={monster.id} monster={monster}/>\n\n       ))\n     \n        }\n\t\t</div>\n)\n\n}","import React from 'react'\n\nimport './search-box.styles.css'\n\nexport const SearchBox = ({handleChange }) => { \n    return(\n    <input className = 'search'\n    type = \"search\"\n    placeholder = \"search-monster\"\n    onChange = {handleChange}\n    />)\n}","import React, { Component } from 'react'\nimport { CardList } from './components/card-list/card-list.component'\nimport { SearchBox } from './components/search-box/search-box.component'\nimport './App.css';\n\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            monsters: [],\n            searchField: '',\n        }\n    }\n    componentDidMount() {\n        fetch(' https://jsonplaceholder.typicode.com/users').then(response => response.json())\n            .then(data => {\n                this.setState({ monsters: data })\n            })\n    }\n    handleChange = (e) => {\n        this.setState({ searchField: e.target.value })\n    }\n    render() {\n        const { monsters, searchField } = this.state\n        let filteredMonsters =[]\n        if (this.state.searchField) {\n            console.log('searchField=', searchField)\n            console.log('monsters=', monsters)\n            filteredMonsters = monsters.filter(monster => {\n                return monster.name.toLowerCase().includes(searchField.toLowerCase())\n            })\n            console.log(\"filteredMonsters=\", filteredMonsters)\n        } else {\n            filteredMonsters = this.state.monsters\n        }\n\n        return ( <div className = \"App\" >\n        <h1 style={{color:'rgba(0, 128, 128, 1)'}}>Monster Rolodex</h1>\n            <SearchBox handleChange = { this.handleChange }/> \n            <CardList monsters = { filteredMonsters } />\n             </div >\n        );\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}